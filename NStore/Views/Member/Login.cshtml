@model MemberModel.Input.LoginInfo

@{
    ViewData["Title"] = "Login";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .flex-container {
        display: flex;
    }

        .flex-container > div {
            color: white;
            width: 100%;
            text-align: center;
        }
</style>

<script src="https://accounts.google.com/gsi/client" async defer></script>
<div id="g_id_onload"
     data-client_id="340756934455-me7d2546r51equ2co3j4mga6fqgtfpcb.apps.googleusercontent.com"
     data-callback="handleCredentialResponse">
</div>

<ul class="breadcrumb">
    <li><a href="index.html">Home</a> <span class="divider">/</span></li>
    <li class="active">Login</li>
</ul>
<h3> Login</h3>
<hr class="soft" />

<div class="row">
    @if (ViewBag.SuccessMsg != null)
    {

        <div id="msgAlert" class="alert alert-success span7" role="alert">
            @ViewBag.SuccessMsg
        </div>

    }
    <div class="span4">
        <div class="well">
            <h5>YOU HAVE NOT REGISTER YET ?</h5><br /><br />
            <form action="register.html">
                <div class="controls">
                    <a href="/Member/Register" class="btn block">Create Your Account</a>
                </div>
            </form>
        </div>
    </div>
    <div class="span1"> &nbsp;</div>
    <div class="span4">
        <div class="well">
            <h5>YOU HAVE ALREADY REGISTERED !</h5>
            <form asp-action="Login" asp-controller="Member" method="post">
                <div class="form-group">
                    <label class="control-label" for="inputEmail1">Email</label>

                    <input asp-for="UserName" class="span3 form-control" type="text" id="inputEmail1" placeholder="Email">
                    <label><span asp-validation-for="UserName" class="text-error"></span></label>
                </div>
                <div class="form-group">
                    <label class="control-label" for="inputPassword1">Password</label>

                    <input asp-for="Password" type="password" class="span3" id="inputPassword1" placeholder="Password">
                    <label><span asp-validation-for="Password" class="text-error"></span></label>
                </div>
                <div asp-validation-summary="ModelOnly" class="text-error"></div>

                <div class="control-group">
                    <div class="flex-container">

                        <div>
                            <fb:login-button scope="public_profile,email"
                                             onlogin="facebookLogin();">
                            </fb:login-button>
                        </div>

                        <div class="g_id_signin"
                             data-type="icon"
                             data-size="large"
                             data-theme="outline"
                             data-text="Sign in"
                             data-locale="us-uk">
                        </div>
                    </div>
                </div>
                <div class="control-group">
                    <button type="submit" class="btn">Sign in</button>
                </div>
                <div class="control-group">
                    <a asp-controller="Member" asp-action="ForgetPassword">Forget password?</a>
                </div>
            </form>
        </div>
    </div>
</div>

<script>

    window.fbAsyncInit = function () {
        FB.init({
            appId: '1226073404881604',
            cookie: true,
            xfbml: true,
            version: 'v14.0'
        });

        FB.AppEvents.logPageView();

    };

    (function (d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) { return; }
        js = d.createElement(s); js.id = id;
        js.src = "https://connect.facebook.net/en_US/sdk.js";
        fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));

    function facebookLogin() {
        FB.getLoginStatus(function (response) {
            statusChangeCallback(response);
        });
    }

    function statusChangeCallback(response, login = true) {
        if (response.status === "connected") {

            FB.api('/me?fields=id,name,email,birthday', function (res) {
                $.ajax({
                    type: "POST",
                    url: '/Member/AnonymousLogin',
                    data: {
                        Name: res.name,
                        Email: res.email,
                        AccountFrom: "Facebook"
                    },
                    success: function (res) {
                        window.location.href = "/Member/CheckInfo";
                    },
                    error: function (err) {

                    }
                })
            })

        } else {
            if (login) {
                FB.login(function (response) {
                    statusChangeCallback(response);
                }, { scope: 'puglic_profile, email' });
            }
        }
    }

    function parseJwt(token) {
        var base64Url = token.split('.')[1];
        var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
        var jsonPayload = decodeURIComponent(window.atob(base64).split('').map(function (c) {
            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
        }).join(''));

        return JSON.parse(jsonPayload);
    };

    function handleCredentialResponse(response) {
        // decodeJwtResponse() is a custom function defined by you
        // to decode the credential response.
        const responsePayload = parseJwt(response.credential);

        $.ajax({
            type: "POST",
            url: '/Member/AnonymousLogin',
            data: {
                Name: responsePayload.name,
                Email: responsePayload.email,
                AccountFrom: "Google"
            },
            success: function (res) {
                window.location.href = "/Member/CheckInfo";
            },
            error: function (err) {

            }
        })
    }
</script>

@section Scripts {
    @{

        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}